{"version":3,"sources":["Hooks/useFetch.js","components/Spinner.jsx","components/Preloader.jsx","components/Badge.jsx","components/PokemonItem.jsx","components/InfoBlock.jsx","components/FilterTypes.jsx","components/PokemonList.jsx","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","options","useState","loading","data","undefined","error","status","setStatus","fetchNow","fetch","then","res","json","catch","useEffect","Spinner","color","className","fill","viewBox","xmlns","d","Preloader","screenHeight","Badge","name","grass","poison","fire","flying","water","bug","electric","ground","fairy","PokemonItem","id","onImageClick","imgStatus","setImgStaus","info","setInfo","colletctTypes","useContext","TypeContext","type","types","tab","attack","stats","base_stat","defense","hp","spAttack","spDefense","speed","weight","totalMoves","moves","length","src","alt","onLoad","onError","onClick","map","tabNames","InfoBlock","arrTypes","onClose","pad","str","max","toString","reduce","acc","el","replace","Object","entries","FilterTypes","props","pageTypes","initialInfo","PokemonList","infoPok","setInfoPok","handleImageClick","console","log","results","match","slice","next","memo","createContext","App","setPageTypes","Provider","value","unic","filter","item","i","ar","indexOf","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc611b14.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst useFetch = (url, options) => {\n\n  const [status, setStatus] = useState({\n    loading: false,\n    data: undefined,\n    error: undefined\n  })\n\n  function fetchNow(url, options) {\n    setStatus({ loading: true })\n\n    fetch(url, options)\n      .then(res => res.json())\n      .then(res => {\n        setStatus({ loading: false, data: res })\n      })\n      .catch(error => {\n        setStatus({ loading: false, error})\n      })\n  }\n\n  useEffect(() => {\n    if(url) {\n      fetchNow(url, options)\n    }\n  }, [])\n\n  return { \n    ...status, \n    fetchNow\n  }\n} \n\nexport default useFetch","const Spinner = ({ color, className }) => (\n  <svg\n    fill={color}\n    viewBox=\"0 0 1792 1792\"\n    className={`${className} flex-no-shrink animate-spin`}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M1760 896q0 176-68.5 336t-184 275.5-275.5 184-336 68.5-336-68.5-275.5-184-184-275.5-68.5-336q0-213 97-398.5t265-305.5 374-151v228q-221 45-366.5 221t-145.5 406q0 130 51 248.5t136.5 204 204 136.5 248.5 51 248.5-51 204-136.5 136.5-204 51-248.5q0-230-145.5-406t-366.5-221v-228q206 31 374 151t265 305.5 97 398.5z\" />\n  </svg>\n);\n\nexport default Spinner","import Spinner from './Spinner'\n\nconst Preloader = ({ color, className, screenHeight }) => {\n  return (\n    <div className={`${screenHeight} flex justify-center items-center space-x-3 md:space-x-6 flex-wrap`}>\n       {/* <Spinner color=\"#1d4ed8\" className=\"h-20\" /> */}\n       <Spinner color={color} className={className} />\n\n    </div>\n  )\n}\n\nexport default Preloader","const Badge = ({ name, className }) => {\n  const bgCollor = {\n    grass: 'from-green-300 to-green-100 border-green-500',\n    poison: 'from-purple-400 to-purple-100 border-purple-500',\n    fire: 'from-red-400 to-red-100 border-red-500',\n    flying: 'from-blue-400 to-blue-100 border-blue-500',\n    water: 'from-blue-500 to-blue-300 border-blue-700',\n    bug : 'from-gray-400 to-gray-100 border-gray-500',\n    electric: 'from-yellow-400 to-yellow-100 border-yellow-500',\n    ground: 'from-yellow-600 to-yellow-300 border-yellow-700',\n    fairy: 'from-red-200 to-red-50 border-red-400',\n  }\n  return (\n    <div className={`border-2 bg-gradient-to-t ${bgCollor[name]} rounded ${className} text-center`}>\n      {name}\n    </div>\n  )\n}\n\nexport default Badge","import { useContext, useEffect, useState } from \"react\"\nimport { TypeContext } from '../App'\nimport useFetch from '../Hooks/useFetch'\nimport Preloader from './Preloader'\nimport Badge from './Badge'\n\nconst PokemonItem = ({ name, id, onImageClick }) => {\n  const [imgStatus, setImgStaus] = useState('loading')\n  const { data } = useFetch(`https://pokeapi.co/api/v2/pokemon/${id}`)\n  const [info, setInfo] = useState({})\n  const { colletctTypes } = useContext(TypeContext)\n\n  useEffect(() => {\n    data && setInfo({\n      url: `https://pokeres.bastionbot.org/images/pokemon/${id}.png`,\n      name: name,\n      id: id,\n      type: data.types,\n      tab: {\n        attack: data.stats[1].base_stat,\n        defense: data.stats[2].base_stat,\n        hp: data.stats[0].base_stat,\n        spAttack: data.stats[3].base_stat,\n        spDefense: data.stats[4].base_stat,\n        speed: data.stats[5].base_stat,\n        weight: data.weight,\n        totalMoves: data.moves.length\n      }\n    })\n\n    data && colletctTypes(data.types)\n  }, [data])\n\n  const handleImageLoaded = () => {\n    setImgStaus('loaded')\n  }\n\n  const handleImageErrored = () => {\n    setImgStaus('failed to load')\n  }\n \n  return (\n    <li className=\"sm:w-1/2 md:w-1/3 mb-8\">\n      <div className=\"border border-black px-5 pb-16 mx-4\">\n        <img\n          className=\"my-4 cursor-pointer\"\n          src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\n          alt={id}\n          onLoad={handleImageLoaded}\n          onError={handleImageErrored}\n          onClick={() => onImageClick(info)}\n        />\n\n        {imgStatus === 'failed to load' && imgStatus}\n        {imgStatus === 'loading' && <Preloader color=\"#1d4ed8\" className=\"h-10\" screenHeight={\"\"} />}\n\n        <div className=\"capitalize font-medium text-center\">\n          {name}\n        </div>\n        <div className=\"flex space-x-2\">\n          {data && data.types.map(({ type: { name } }) => (   \n            <Badge key={name} name={name} className=\"w-1/2\" />\n          ))}\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default PokemonItem","const tabNames = {\n  attack: 'Attack',\n  defense: 'Defense',\n  hp: 'HP',\n  spAttack: 'SP Attack',\n  spDefense: 'SP Defense',\n  speed: 'Speed',\n  weight: 'Weight',\n  totalMoves: 'Tottal moves',\n}\n\nconst InfoBlock = ({info, onClose}) => {\n  const { url, name, id, type, tab } = info\n  \n  // Adds zeros before the digit - in our case it an id of pokemon. There should be a total of three digits\n  const pad = (str, max) => {\n    str = str.toString()\n    return str.length < max ? pad(\"0\" + str, max) : str\n  }\n\n  // Forms a types string from an array of objects\n  const strTypes = arrTypes => {\n    return arrTypes.reduce((acc, el) => {\n      return `${acc}, ${el.type.name}`.replace(/^, /, '')\n    }, '')\n  }\n\n  return (\n    <div className=\"h-screen bg-gray-400 lg:bg-transparent\">\n      <div className=\"text-center border border-black p-5 lg:max-w-xs relative bg-white\">\n        <div\n          className=\"visible lg:invisible absolute right-5 bg-gray-300 py-1 px-3 rounded-full hover:bg-gray-400\"\n          onClick={onClose}\n        >x</div>\n        <div className=\"max-w-xs mx-auto\">\n          <img className=\"inline-block \" src={url} alt={name} />\n        </div>\n        \n\n        <div className=\"text-center font-medium text-1xl capitalize py-2\">\n          {name} #{pad(id, 3)}\n        </div>\n\n        <div className=\"max-w-xs m-auto\">\n        <table className=\"table-fixed border-collapse border border-black w-full\">\n          <tbody>\n            <tr>\n              <td className=\"w-3/4 border border-black\">Type</td>\n              <td className=\"w-1/4 border border-black\">\n                {type && strTypes(type)}\n              </td>\n            </tr>\n            {tab && Object.entries(tab).map(el => (\n              <tr key={el[0]}>\n                <td className=\"border border-black\">{tabNames[el[0]]}</td>\n                <td className=\"border border-black\">{el[1]}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default InfoBlock","import { useContext } from \"react\"\nimport { TypeContext } from '../App'\nimport Badge from './Badge'\n\nconst FilterTypes = (props) => {\n  const { pageTypes } = useContext(TypeContext)\n\n  return (\n    <div className=\"pb-52\">\n      <h2 className=\"font-medium text-2xl\">Avaible types on this page</h2>\n      <div className=\"flex flex-wrap space-x-2\">\n        {pageTypes && pageTypes.map(name => (   \n              <Badge className=\"w-32 my-2\" key={name} name={name} />\n            ))}\n        </div>\n    </div>\n  )\n}\n\nexport default FilterTypes","import { memo, useState } from 'react'\nimport useFetch from '../Hooks/useFetch'\nimport Preloader from '../components/Preloader'\nimport PokemonItem from './PokemonItem'\nimport InfoBlock from './InfoBlock'\nimport FilterTypes from './FilterTypes'\n\nconst initialInfo = {\n  url: '',\n  name: '',\n  id: '',\n  type: [],\n  tab: {\n    attack: '',\n    defense: '',\n    hp: '',\n    spAttack: '',\n    spDefense: '',\n    speed: '',\n    weight: '',\n    totalMoves: ''\n  }\n}\n\n\nconst PokemonList = () => {\n  const { data, loading, error, fetchNow } = useFetch(`https://pokeapi.co/api/v2/pokemon?limit=12`)\n  const [infoPok, setInfoPok] = useState(initialInfo)\n\n  const handleLoadMore = () => fetchNow(data.next)\n\n  const handleImageClick = info => setInfoPok(info)\n\n  const handleCloseInfo = () => setInfoPok(initialInfo)\n\n  if(loading) return <Preloader color=\"#1d4ed8\" className=\"h-20\" screenHeight={\"h-screen\"} />\n\n  if(error) {\n    console.log('error', error)\n    return null\n  }\n\n  return (\n    <div>\n      <div className=\"container mx-auto flex relative\">\n        <div className=\"w-full lg:w-3/5\">\n          <ul className=\"flex flex-col sm:flex-row flex-wrap\">\n            {data && data.results.map(({ name, url }) => (\n              <PokemonItem\n                key={url}\n                name={name}\n                id={url.match(/\\d+/g).slice(-1)}\n                onImageClick={handleImageClick}\n              />\n            ))}\n          </ul>\n          <button\n            className=\"w-full py-2 rounded bg-blue-400 text-white font-medium\"\n            onClick={handleLoadMore}\n          >\n            Load More\n          </button>\n        </div>\n\n        <div className=\"lg:w-2/5\">\n          <div className=\"fixed left-0 lg:left-2/3 right-0 top-0 lg:top-32 bg-white\">{/*left-0 lg:static */}\n            {infoPok.url && <InfoBlock info={infoPok} onClose={handleCloseInfo} />}\n          </div>\n        </div>\n      </div>\n      <div className=\"container mx-auto pt-20\">\n        <div>\n          <FilterTypes />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(PokemonList)","import { createContext, useState } from 'react';\nimport PokemonList from './components/PokemonList'\n\nexport const TypeContext = createContext([])\n\nfunction App() {\n  const [pageTypes, setPageTypes] = useState([])\n  \n// Here we are colletion all type from every PokemonItem component\n  const colletctTypes = arrTypes => {\n    const res = arrTypes.map(el => el.type.name)\n    const summary = [...pageTypes, ...res]\n    let unic = summary.filter((item, i, ar) => ar.indexOf(item) === i)\n    setPageTypes(unic)\n  }\n\n  return (\n    <TypeContext.Provider value={{ pageTypes, colletctTypes }}>\n      <div>\n        <div className=\"text-center py-5\">\n          <div className=\"capitalize text-center border border-black inline-block py-2 px-36 text-3xl font-medium\">\n            pokedex\n          </div>\n        </div>\n        <PokemonList />\n      </div>\n    </TypeContext.Provider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}